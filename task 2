import random

def display(board):
    for r in board:
        print(" | ".join(r))
        print("-" * 9)

def winner_check(b):
    lines = (
        b[0], b[1], b[2],  # rows
        [b[0][0], b[1][0], b[2][0]],  # columns
        [b[0][1], b[1][1], b[2][1]],
        [b[0][2], b[1][2], b[2][2]],
        [b[0][0], b[1][1], b[2][2]],  # diagonals
        [b[0][2], b[1][1], b[2][0]]
    )
    for line in lines:
        if line.count('X') == 3:
            return 'X'
        elif line.count('O') == 3:
            return 'O'
    return None

def free_slots(b):
    return [(i, j) for i in range(3) for j in range(3) if b[i][j] == ' ']

def is_full(b):
    return all(cell != ' ' for row in b for cell in row)

def think_move(board, ai_turn):
    winner = winner_check(board)
    if winner == 'O':
        return 10
    elif winner == 'X':
        return -10
    elif is_full(board):
        return 0

    moves = free_slots(board)
    scores = []

    for move in moves:
        i, j = move
        board[i][j] = 'O' if ai_turn else 'X'
        score = think_move(board, not ai_turn)
        scores.append(score)
        board[i][j] = ' '

    return max(scores) if ai_turn else min(scores)

def best_for_ai(board):
    options = free_slots(board)
    best_score = -float('inf')
    pick = None
    for i, j in options:
        board[i][j] = 'O'
        current_score = think_move(board, False)
        board[i][j] = ' '
        if current_score > best_score:
            best_score = current_score
            pick = (i, j)
    return pick

def main():
    grid = [[' '] * 3 for _ in range(3)]
    print("Welcome to Tic-Tac-Toe!")
    print("You are 'X'. AI is 'O'. Let's start!\n")

    display(grid)

    while True:
        # Player
        while True:
            try:
                x = int(input("Row (0-2): "))
                y = int(input("Col (0-2): "))
                if grid[x][y] == ' ':
                    grid[x][y] = 'X'
                    break
                else:
                    print("Spot taken. Try another.")
            except:
                print("Invalid. Enter numbers 0, 1, or 2.")

        display(grid)
        if winner_check(grid) == 'X':
            print("You won! ðŸŽ‰")
            break
        if is_full(grid):
            print("Match tied!")
            break

        # AI
        ai_row, ai_col = best_for_ai(grid)
        grid[ai_row][ai_col] = 'O'
        print("AI played:")
        display(grid)

        if winner_check(grid) == 'O':
            print("AI wins! ðŸ¤–")
            break
        if is_full(grid):
            print("Match tied!")
            break

if __name__ == "__main__":
    main()
